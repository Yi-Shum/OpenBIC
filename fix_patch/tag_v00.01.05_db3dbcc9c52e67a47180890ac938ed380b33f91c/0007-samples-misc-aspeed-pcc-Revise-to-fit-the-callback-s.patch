From 2ad3e6beb0da83d17c049e1298561fa2218f6a9b Mon Sep 17 00:00:00 2001
From: Chia-Wei Wang <chiawei_wang@aspeedtech.com>
Date: Fri, 29 Jul 2022 10:54:28 +0800
Subject: [PATCH 3/3] samples: misc/aspeed-pcc: Revise to fit the callback
 scheme

The PCC driver is revised to work in the callback paradigm,
allowing users to register customized RX handler.

The sample app is updated to follow this change.

Signed-off-by: Chia-Wei Wang <chiawei_wang@aspeedtech.com>
Change-Id: I86ddc87e2711e820589042d6ac10c609e9f057a4
---
 .../misc/aspeed/pcc/boards/ast1030_evb.conf   |  1 +
 .../aspeed/pcc/boards/ast1030_evb.overlay     |  1 +
 samples/drivers/misc/aspeed/pcc/src/main.c    | 37 +++++++++++++------
 3 files changed, 27 insertions(+), 12 deletions(-)

diff --git a/samples/drivers/misc/aspeed/pcc/boards/ast1030_evb.conf b/samples/drivers/misc/aspeed/pcc/boards/ast1030_evb.conf
index 2d6ad032de..e890366146 100644
--- a/samples/drivers/misc/aspeed/pcc/boards/ast1030_evb.conf
+++ b/samples/drivers/misc/aspeed/pcc/boards/ast1030_evb.conf
@@ -1,3 +1,4 @@
+CONFIG_LOG=y
 CONFIG_ESPI=y
 CONFIG_ESPI_ASPEED=y
 CONFIG_PCC_ASPEED=y
diff --git a/samples/drivers/misc/aspeed/pcc/boards/ast1030_evb.overlay b/samples/drivers/misc/aspeed/pcc/boards/ast1030_evb.overlay
index ab2432a5a2..dd80e242ac 100644
--- a/samples/drivers/misc/aspeed/pcc/boards/ast1030_evb.overlay
+++ b/samples/drivers/misc/aspeed/pcc/boards/ast1030_evb.overlay
@@ -12,4 +12,5 @@
 	addr-hbit-sel = <0x1>;
 	rec-mode = <0x1>;
 	dma-mode;
+	dma-ringbuf-size = <0x4000>;
 };
diff --git a/samples/drivers/misc/aspeed/pcc/src/main.c b/samples/drivers/misc/aspeed/pcc/src/main.c
index 7bc4d69ee2..ab2fc23a3b 100644
--- a/samples/drivers/misc/aspeed/pcc/src/main.c
+++ b/samples/drivers/misc/aspeed/pcc/src/main.c
@@ -9,11 +9,26 @@
 #include <device.h>
 #include <drivers/misc/aspeed/pcc_aspeed.h>
 
+static uint32_t count;
+
+static void pcc_rx_callback(const uint8_t *rb, uint32_t rb_sz, uint32_t st_idx, uint32_t ed_idx)
+{
+	uint32_t i = st_idx;
+
+	do {
+		if (count % 16 == 0)
+			printk("\n");
+
+		printk("%02x ", rb[i]);
+
+		i = (i + 1) % rb_sz;
+		++count;
+	} while (i != ed_idx);
+}
+
 void main(void)
 {
 	int rc;
-	uint32_t count = 0;
-	uint8_t data;
 	const struct device *pcc_dev;
 
 	pcc_dev = device_get_binding(DT_LABEL(DT_NODELABEL(pcc)));
@@ -22,16 +37,14 @@ void main(void)
 		return;
 	}
 
-	printk("Reading PCC data ...\n");
+	rc = pcc_aspeed_register_rx_callback(pcc_dev, pcc_rx_callback);
+	if (rc) {
+		printk("Cannot register RX callback\n");
+		return;
+	}
 
-	while (1) {
-		rc = pcc_aspeed_read(pcc_dev, &data, true);
-		if (rc == 0) {
-			printk("%02x ", data);
-			++count;
-		}
+	printk("Incoming PCC data ... ");
 
-		if (count % 16 == 0)
-			printk("\n");
-	}
+	while (1)
+		k_msleep(100);
 }
-- 
2.25.1

